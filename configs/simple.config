import "config_examples:brats_base.config"
import "config_examples:assets/batch_iter/patch_3d.config"
import "config_examples:assets/problem/segm.config"
import "config_examples:assets/model/torch_model.config"

import "config_examples:assets/data_source/iitp/brats.config"

from functools import partial

import torch
from torch.nn.functional import softmax, relu

from dpipe.torch.utils import softmax_cross_entropy
from dpipe.train.lr_policy import Decreasing
from dpipe.batch_predict.patch_3d_fixed import Patch3DFixedPredictor

from brats.model_core import SimpleNet

activation = relu
structure = [8]

model_core = SimpleNet(n_chans_in=n_chans_in, n_chans_out=n_chans_out, structure=structure, activation=activation)

logits2pred = partial(softmax, dim=1)
logits2loss = softmax_cross_entropy

lr_init = 0.1

optimize = torch.optim.SGD(
    # lazy
    lr=lr_init,
    momentum=0.9,
    nesterov=True
)

lr_policy = Decreasing(
    trace_train=True,
    lr_init=lr_init,
    lr_dec_mul=0.5,
    patience=10,
    atol=0.01,
    rtol=0.03,
)

x_patch_sizes = [[32, 32, 32]]
y_patch_size = [30, 30, 30]

n_epochs = 120
n_iters_per_epoch = 200
batch_size = 128

predictor_x_patch_sizes = x_patch_sizes
predictor_y_patch_size = y_patch_size

batch_predict = Patch3DFixedPredictor(
    x_patch_sizes=predictor_x_patch_sizes,
    y_patch_size=predictor_y_patch_size,
    padding_mode="min",
)
